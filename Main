#include <iostream>
#include <string>
#include <fstream>
#include <iomanip>
using namespace std;

struct StudProf{
  string id;
  string name;
  string birthday;
  string address;
  string gender;
  string degreeProgram;
  int yearLevel;
};

struct Node{
    StudProf profile;
    Node *next;
};

Node *head = nullptr;

void studName(const StudProf& profile){
    Node *newNode = new Node;
    newNode->profile = profile;
    newNode->next = head;
    head = newNode;
}

void allRec(){
}

void specRec(){
}

void delRec(){
}

void displayMenu(){//displaying the menu of our program by being in a function that can be called and looped [shaun]
    int userInput;
    cout << "Welcome to Group# Student Portal\n"; // AEPS ipangalan natin, any thoughts and feelings? [oms by shaun]
    cout << "-----------------------------------------\n";
    cout << "Pick from the numerous choices:\n";
    cout << "-----------------------------------------\n";
    cout << "1. Add Records\n";
    cout << "2. Search Records\n";
    cout << "3. Display All Records\n";
    cout << "4. Display Specific Records\n";
    cout << "5. Delete Record\n";
    cout << "6. Exit\n";
    cout << "-----------------------------------------\n";
    cout << "Please Type Your Choice:\n";
    cout << "-----------------------------------------\n";
}

void addRecord(fstream &file){
    StudProf newStudent;
    cout << "Enter Student ID: ";
    cin >> newStudent.id;
    cin.ignore();

    cout << "Enter Full Name: ";
    getline(cin, newStudent.name);

    cout << "Enter Birthday (YYYY|MM|DD): ";
    getline(cin, newStudent.birthday);

    cout << "Enter Address: ";
    getline(cin, newStudent.address);

    cout << "Enter Gender: ";
    getline(cin, newStudent.gender);

    cout << "Enter Degree Program (e.g Bachelor of Science in Computer Science): ";
    getline(cin, newStudent.degreeProgram);

    cout << "Enter Year Level: ";
    cin >> newStudent.yearLevel; //ginawa kong cin kasi integer datatype lang naman [shaun]
    
    file << newStudent.name << "," << newStudent.birthday << "," << newStudent.address << "," 
    << newStudent.gender << "," << newStudent.degreeProgram << "," << newStudent.yearLevel << '\n';

    cout << "Record Added Successfully!\n";
}


void searchRecord() {
    string id;
    cout << "Enter Student ID: ";
    cin.ignore(); // kinilear nito yung line [shaun]
    getline(cin, id);

    Node *current = head;
    while (current != nullptr) {
        if (current->profile.id == id) {
            cout << "Student Found:\n";
            cout << "ID: " << current->profile.id << "\n";
            cout << "Name: " << current->profile.name << "\n";
            cout << "Birthday: " << current->profile.birthday << "\n";
            cout << "Address: " << current->profile.address << "\n";
            cout << "Gender: " << current->profile.gender << "\n";
            cout << "Degree Program: " << current->profile.degreeProgram << "\n";
            cout << "Year Level: " << current->profile.yearLevel << "\n";
            return; // 
        }
        current = current->next;
    }
    cout << "Student record not found.\n";
}

void displayRecords(){
    cout << left << setw(10) << "ID" << setw(20) << "Name" << setw(15) << "Birthday" << setw(20) 
         << "Address" << setw(10) << "Gender" << setw(20) << "Degree Program" << setw(10) << "Year Level" << "\n";

    Node *current = head;
    while (current != nullptr) {
        cout << left << setw(10) << current->profile.id 
             << setw(20) << current->profile.name 
             << setw(15) << current->profile.birthday 
             << setw(20) << current->profile.address 
             << setw(10) << current->profile.gender 
             << setw(20) << current->profile.degreeProgram 
             << setw(10) << current->profile.yearLevel << "\n";
        current = current->next;
    }
}

//deleteRecord(file); 


void exitProgram(){//display neto yung exit program natin [shaun]
    cout << "Thank you for using Group# Student Portal\n";
    cout << "Group Members:\n";
    cout << "-----------------------------------------\n";
    cout << "1. Azarraga, Dwayne Antoine Benjamin C.\n";
    cout << "2. Eleptico, Genesis Rilly C.\n";
    cout << "3. Pascual, Shaun Robert T.\n";
    cout << "4. Soriano, Jermaine Rikko C.\n";
    cout << "-----------------------------------------\n";
}

int main(){
    fstream file("student.txt", ios::in | ios::out | ios::app);
    if (!file){
        cout << "unable to open file." << endl;
        return 1;
    }

    int choice=0;

    while (true){
        displayMenu();
        if (!(cin >> choice)){ // tas check nito if meron invalid input [shaun]
            cin.clear(); // Clear nya yung error flag [shaun]
            cin.ignore(); // Ignore nya yung invalid input [shaun]
            cout << "Invalid input. Please enter a valid choice.\n";
            continue;
        }
        switch (choice){
            case 1: addRecord(file); break;
            case 2: searchRecord(file); break;
            case 3: displayRecords(file); break;
            //case 4: displayRecords(file); break;
            //case 5: deleteRecord(file); break;
            case 6:
                //exitProgram(file);
                file.close();
                return 0;
            
            default:
                cout << "Invalid choice, please try again." << endl;
        }
    }

    file.close();
    exitProgram();
    return 0;
}

