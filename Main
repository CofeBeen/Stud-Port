#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <iomanip>

using namespace std;

struct Student {
    string id;
    string fullName;
    string birthday;
    string address;
    string gender;
    string degreeProgram;
    int yearLevel;
};

vector<Student> students;

void addRecord();
void searchRecord();
void deleteRecord();
void displayRecords();
void displaySpecificRecord();
void saveToFile();
void loadFromFile();
void displayMenu();
void exitProgram();

<<<<<<< Updated upstream
int main() {
    loadFromFile();
    int choice;
    do {
=======
void studName(const StudProf& profile){
    Node *newNode = new Node;
    newNode->profile = profile;
    newNode->next = head;
    head = newNode;
}

void displayMenu(){//displaying the menu of our program by being in a function that can be called and looped [shaun]
    int userInput;
    cout << "Welcome to AEPS Student Portal\n"; // AEPS ipangalan natin, any thoughts and feelings? [oms by shaun]
    cout << "-----------------------------------------\n";
    cout << "Pick from the numerous choices:\n";
    cout << "-----------------------------------------\n";
    cout << "1. Add Records\n";
    cout << "2. Search Records\n";
    cout << "3. Display All Records\n";
    cout << "4. Display Specific Records\n";
    cout << "5. Delete Record\n";
    cout << "6. Exit\n";
    cout << "-----------------------------------------\n";
    cout << "Please Type Your Choice:\n";
    cout << "-----------------------------------------\n";
}

void addRecords(fstream &file){
    StudProf newStudent;
    cout << "Enter Student ID: ";
    cin >> newStudent.id;
    cin.ignore();

    cout << "Enter Full Name: ";
    getline(cin, newStudent.name);

    cout << "Enter Birthday (YYYY|MM|DD): ";
    getline(cin, newStudent.birthday);

    cout << "Enter Address: ";
    getline(cin, newStudent.address);

    cout << "Enter Gender: ";
    getline(cin, newStudent.gender);

    cout << "Enter Degree Program (e.g Bachelor of Science in Computer Science): ";
    getline(cin, newStudent.degreeProgram);

    cout << "Enter Year Level: ";
    cin >> newStudent.yearLevel; //ginawa kong cin kasi integer datatype lang naman [shaun]
    
    file << newStudent.name << "," << newStudent.birthday << "," << newStudent.address << "," 
    << newStudent.gender << "," << newStudent.degreeProgram << "," << newStudent.yearLevel << '\n';

    cout << "Record Added Successfully!\n";
}


void searchRecords() {
    string id;
    cout << "Enter Student ID: ";
    cin.ignore(); // kinilear nito yung line [shaun]
    getline(cin, id);

    Node *current = head;
    while (current != nullptr) {//loop neto yung linked list until sa tail[shaun]
        if (current->profile.id == id) {
            cout << "Student Found:\n";
            cout << "ID: " << current->profile.id << "\n";
            cout << "Name: " << current->profile.name << "\n";
            cout << "Birthday: " << current->profile.birthday << "\n";
            cout << "Address: " << current->profile.address << "\n";
            cout << "Gender: " << current->profile.gender << "\n";
            cout << "Degree Program: " << current->profile.degreeProgram << "\n";
            cout << "Year Level: " << current->profile.yearLevel << "\n";
            return; // 
        }
        current = current->next;
    }
    cout << "Student record not found.\n";
}

void displayRecords(){
    cout << left << setw(10) << "ID" << setw(20) << "Name" << setw(15) << "Birthday" << setw(20) 
         << "Address" << setw(10) << "Gender" << setw(20) << "Degree Program" << setw(10) << "Year Level" << "\n";

    Node *current = head;
    while (current != nullptr) {//loop neto yung linked list until sa tail[shaun]
        cout << left << setw(10) << current->profile.id 
             << setw(20) << current->profile.name 
             << setw(15) << current->profile.birthday 
             << setw(20) << current->profile.address 
             << setw(10) << current->profile.gender 
             << setw(20) << current->profile.degreeProgram 
             << setw(10) << current->profile.yearLevel << "\n";
        current = current->next;
    }
}

void deleteRecords(fstream &file) {
    string id;
    cout << "Input an ID Number to delete: ";
    cin.ignore(); // 
    getline(cin, id);

    Node *current = head;
    Node *previous = nullptr;

    while (current != nullptr) {
        if (current->profile.id == id) { // check niya if match ba yung id sa databse natin [shaun]
            if (previous == nullptr) {
                head = current->next; //ito kung dedelete natin yung head node pag nagmatch sa id [shaun]
            } else {
                previous->next = current->next; //ito parang niskip natin yung current node dahil ididelete na sya e [shaun]
            }
            delete current; // ito ifefree nya yung memory dahil dinelete na natin yung node e [shaun]
            cout << "Record with ID " << id << " deleted successfully.\n";
            return; 
        }
        previous = current; // ito momove na nating yung previous node na dinelete natin sa current [shaun]
        current = current->next;
    }

    cout << "Record with ID " << id << " not found.\n";
}


void exitProgram(){//display neto yung exit program natin [shaun]
    cout << "Thank you for using AEPS Student Portal\n";
    cout << "Group Members:\n";
    cout << "-----------------------------------------\n";
    cout << "1. Azarraga, Dwayne Antoine Benjamin C.\n";
    cout << "2. Eleptico, Genesis Rilly C.\n";
    cout << "3. Pascual, Shaun Robert T.\n";
    cout << "4. Soriano, Jermaine Rikko C.\n";
    cout << "-----------------------------------------\n";
}

int main(){
    fstream file("student.txt", ios::in | ios::out | ios::app);
    if (!file){//kung hindi makita yung file [shaun]
        cout << "unable to open file." << endl;
        return 1;
    }

    int choice=0;

    while (true){
>>>>>>> Stashed changes
        displayMenu();
        cin >> choice;
        cin.ignore();
        switch (choice) {
        case 1: addRecord(); break;
        case 2: searchRecord(); break;
        case 3: displayRecords(); break;
        case 4: displaySpecificRecord(); break;
        case 5: deleteRecord(); break;
        case 6: exitProgram(); break;
        default: cout << "Invalid selection. Please try again.\n";
        }
    } while (choice != 6);
    return 0;
}

void displayMenu() {
    cout << "-----------------------------------------\n";
    cout << "Welcome to AEPS Student Information System\n";
    cout << "What do you want to do?\n";
    cout << "1. Add New Record\n";
    cout << "2. Search Record\n";
    cout << "3. Display All Records\n";
    cout << "4. Display Specific Record\n";
    cout << "5. Delete Record\n";
    cout << "6. Exit\n";
    cout << "Please type your selection: ";

}

void addRecord() {
    Student student;
    cout << "Enter Student ID: ";
    getline(cin, student.id);
    cout << "Enter Full Name: ";
    getline(cin, student.fullName);
    cout << "Enter Birthday: ";
    getline(cin, student.birthday);
    cout << "Enter Address: ";
    getline(cin, student.address);
    cout << "Enter Gender: ";
    getline(cin, student.gender);
    cout << "Enter Degree Program: ";
    getline(cin, student.degreeProgram);
    cout << "Enter Year Level (1-4): ";
    cin >> student.yearLevel;
    cin.ignore();
    students.push_back(student);
    saveToFile();
    cout << "Record added successfully.\n";
}

void searchRecord() {
    string id;
    cout << "Enter Student ID to search: ";
    getline(cin, id);
    for (const auto& student : students) {
        if (student.id == id) {
            cout << "Student found:\n";
            cout << "ID: " << student.id << "\n";
            cout << "Name: " << student.fullName << "\n";
            cout << "Birthday: " << student.birthday << "\n";
            cout << "Address: " << student.address << "\n";
            cout << "Gender: " << student.gender << "\n";
            cout << "Degree Program: " << student.degreeProgram << "\n";
            cout << "Year Level: " << student.yearLevel << "\n";
            return;
        }
    }
    cout << "Student not found.\n";
}

void deleteRecord() {
    string id;
    cout << "Enter Student ID to delete: ";
    getline(cin, id);
    for (auto it = students.begin(); it != students.end(); ++it) {
        if (it->id == id) {
            students.erase(it);
            saveToFile();
            cout << "Record deleted successfully.\n";
            return;
        }
    }
    cout << "Student not found.\n";
}

void displayRecords() {
    cout << left << setw(10) << "ID" << setw(20) << "Name" << setw(15) << "Birthday" << setw(20) << "Address" << setw(10) << "Gender" << setw(20) << "Degree Program" << setw(10) << "Year Level" << "\n";
    for (const auto& student : students) {
        cout << left << setw(10) << student.id << setw(20) << student.fullName << setw(15) << student.birthday << setw(20) << student.address << setw(10) << student.gender << setw(20) << student.degreeProgram << setw(10) << student.yearLevel << "\n";
    }
}

void displaySpecificRecord() {
    string id;
    cout << "Enter Student ID to display: ";
    getline(cin, id);
    for (const auto& student : students) {
        if (student.id == id) {
            cout << "ID: " << student.id << "\n";
            cout << "Name: " << student.fullName << "\n";
            cout << "Birthday: " << student.birthday << "\n";
            cout << "Address: " << student.address << "\n";
            cout << "Gender: " << student.gender << "\n";
            cout << "Degree Program: " << student.degreeProgram << "\n";
            cout << "Year Level: " << student.yearLevel << "\n";
            return;
        }
    }
    cout << "Student not found.\n";
}

void saveToFile() {
    ofstream file("students.txt");
    for (const auto& student : students) {
        file << student.id << "\n";
        file << student.fullName << "\n";
        file << student.birthday << "\n";
        file << student.address << "\n";
        file << student.gender << "\n";
        file << student.degreeProgram << "\n";
        file << student.yearLevel << "\n";
    }
}

void loadFromFile() {
    ifstream file("students.txt");
    if (!file) return;
    Student student;
    while (getline(file, student.id)) {
        getline(file, student.fullName);
        getline(file, student.birthday);
        getline(file, student.address);
        getline(file, student.gender);
        getline(file, student.degreeProgram);
        file >> student.yearLevel;
        file.ignore();
        students.push_back(student);
    }
}

void exitProgram() {
    cout << "-----------------------------------------\n";
    cout << "Thank you for using AEPS Student Information System!\n";
    cout << "Group Members:\n";
    cout << "1. Dwayne Antoine Benjamin Azarraga\n";
    cout << "2. Genesis Rilly Eleptico\n";
    cout << "3. Shaun Robert Pascual\n";
    cout << "4. Jermaine Rikko C. Soriano\n";
    cout << "-----------------------------------------\n";
}